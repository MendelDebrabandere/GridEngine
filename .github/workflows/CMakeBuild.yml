name: C++ Vulkan Build and Test

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build-type: [Debug, Release]
        compiler: [gcc, clang]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Vulkan SDK
        run: |
          wget https://sdk.lunarg.com/sdk/download/1.3.261.1/linux/vulkan-sdk-linux-x86_64-1.3.261.1.tar.gz
          tar -xvf vulkan-sdk-linux-x86_64-1.3.261.1.tar.gz
          echo "${GITHUB_WORKSPACE}/1.3.261.1/x86_64" >> $GITHUB_ENV
        shell: bash

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y \
          build-essential \
          cmake \
          ninja-build \
          libx11-xcb-dev \
          libxcb-dri3-dev \
          libxcb-present-dev \
          libxrandr-dev \
          libxrandr2 \
          libxinerama-dev \
          libxcursor-dev \
          libxi-dev \
          libgl1-mesa-dev \
          libvulkan-dev \
          vulkan-utils \
          gcc-multilib \
          g++-multilib
        shell: bash

      - name: Create build directory
        run: mkdir build
        working-directory: ${{ github.workspace }}

      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -G Ninja
        working-directory: ${{ github.workspace }}

      - name: Build with CMake
        run: cmake --build build --config ${{ matrix.build-type }}
        working-directory: ${{ github.workspace }}

      - name: Run tests
        run: ctest --output-on-failure
        working-directory: ${{ github.workspace }}/build
